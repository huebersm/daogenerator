// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bcl.proto

package bcl;

public final class Bcl {
  private Bcl() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TimeSpanOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional sint64 value = 1;
    /**
     * <code>optional sint64 value = 1;</code>
     *
     * <pre>
     * the size of the timespan (in units of the selected scale)
     * </pre>
     */
    boolean hasValue();
    /**
     * <code>optional sint64 value = 1;</code>
     *
     * <pre>
     * the size of the timespan (in units of the selected scale)
     * </pre>
     */
    long getValue();

    // optional .bcl.TimeSpan.TimeSpanScale scale = 2 [default = DAYS];
    /**
     * <code>optional .bcl.TimeSpan.TimeSpanScale scale = 2 [default = DAYS];</code>
     *
     * <pre>
     * the scale of the timespan
     * </pre>
     */
    boolean hasScale();
    /**
     * <code>optional .bcl.TimeSpan.TimeSpanScale scale = 2 [default = DAYS];</code>
     *
     * <pre>
     * the scale of the timespan
     * </pre>
     */
    bcl.Bcl.TimeSpan.TimeSpanScale getScale();
  }
  /**
   * Protobuf type {@code bcl.TimeSpan}
   */
  public static final class TimeSpan extends
      com.google.protobuf.GeneratedMessage
      implements TimeSpanOrBuilder {
    // Use TimeSpan.newBuilder() to construct.
    private TimeSpan(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TimeSpan(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TimeSpan defaultInstance;
    public static TimeSpan getDefaultInstance() {
      return defaultInstance;
    }

    public TimeSpan getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TimeSpan(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              value_ = input.readSInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              bcl.Bcl.TimeSpan.TimeSpanScale value = bcl.Bcl.TimeSpan.TimeSpanScale.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                scale_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bcl.Bcl.internal_static_bcl_TimeSpan_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bcl.Bcl.internal_static_bcl_TimeSpan_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bcl.Bcl.TimeSpan.class, bcl.Bcl.TimeSpan.Builder.class);
    }

    public static com.google.protobuf.Parser<TimeSpan> PARSER =
        new com.google.protobuf.AbstractParser<TimeSpan>() {
      public TimeSpan parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TimeSpan(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TimeSpan> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code bcl.TimeSpan.TimeSpanScale}
     */
    public enum TimeSpanScale
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>DAYS = 0;</code>
       */
      DAYS(0, 0),
      /**
       * <code>HOURS = 1;</code>
       */
      HOURS(1, 1),
      /**
       * <code>MINUTES = 2;</code>
       */
      MINUTES(2, 2),
      /**
       * <code>SECONDS = 3;</code>
       */
      SECONDS(3, 3),
      /**
       * <code>MILLISECONDS = 4;</code>
       */
      MILLISECONDS(4, 4),
      /**
       * <code>MINMAX = 15;</code>
       *
       * <pre>
       * dubious
       * </pre>
       */
      MINMAX(5, 15),
      ;

      /**
       * <code>DAYS = 0;</code>
       */
      public static final int DAYS_VALUE = 0;
      /**
       * <code>HOURS = 1;</code>
       */
      public static final int HOURS_VALUE = 1;
      /**
       * <code>MINUTES = 2;</code>
       */
      public static final int MINUTES_VALUE = 2;
      /**
       * <code>SECONDS = 3;</code>
       */
      public static final int SECONDS_VALUE = 3;
      /**
       * <code>MILLISECONDS = 4;</code>
       */
      public static final int MILLISECONDS_VALUE = 4;
      /**
       * <code>MINMAX = 15;</code>
       *
       * <pre>
       * dubious
       * </pre>
       */
      public static final int MINMAX_VALUE = 15;


      public final int getNumber() { return value; }

      public static TimeSpanScale valueOf(int value) {
        switch (value) {
          case 0: return DAYS;
          case 1: return HOURS;
          case 2: return MINUTES;
          case 3: return SECONDS;
          case 4: return MILLISECONDS;
          case 15: return MINMAX;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TimeSpanScale>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<TimeSpanScale>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TimeSpanScale>() {
              public TimeSpanScale findValueByNumber(int number) {
                return TimeSpanScale.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bcl.Bcl.TimeSpan.getDescriptor().getEnumTypes().get(0);
      }

      private static final TimeSpanScale[] VALUES = values();

      public static TimeSpanScale valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private TimeSpanScale(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:bcl.TimeSpan.TimeSpanScale)
    }

    private int bitField0_;
    // optional sint64 value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private long value_;
    /**
     * <code>optional sint64 value = 1;</code>
     *
     * <pre>
     * the size of the timespan (in units of the selected scale)
     * </pre>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint64 value = 1;</code>
     *
     * <pre>
     * the size of the timespan (in units of the selected scale)
     * </pre>
     */
    public long getValue() {
      return value_;
    }

    // optional .bcl.TimeSpan.TimeSpanScale scale = 2 [default = DAYS];
    public static final int SCALE_FIELD_NUMBER = 2;
    private bcl.Bcl.TimeSpan.TimeSpanScale scale_;
    /**
     * <code>optional .bcl.TimeSpan.TimeSpanScale scale = 2 [default = DAYS];</code>
     *
     * <pre>
     * the scale of the timespan
     * </pre>
     */
    public boolean hasScale() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .bcl.TimeSpan.TimeSpanScale scale = 2 [default = DAYS];</code>
     *
     * <pre>
     * the scale of the timespan
     * </pre>
     */
    public bcl.Bcl.TimeSpan.TimeSpanScale getScale() {
      return scale_;
    }

    private void initFields() {
      value_ = 0L;
      scale_ = bcl.Bcl.TimeSpan.TimeSpanScale.DAYS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt64(1, value_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, scale_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(1, value_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, scale_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static bcl.Bcl.TimeSpan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bcl.Bcl.TimeSpan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bcl.Bcl.TimeSpan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bcl.Bcl.TimeSpan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bcl.Bcl.TimeSpan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bcl.Bcl.TimeSpan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static bcl.Bcl.TimeSpan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static bcl.Bcl.TimeSpan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static bcl.Bcl.TimeSpan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bcl.Bcl.TimeSpan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bcl.Bcl.TimeSpan prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code bcl.TimeSpan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements bcl.Bcl.TimeSpanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bcl.Bcl.internal_static_bcl_TimeSpan_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bcl.Bcl.internal_static_bcl_TimeSpan_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                bcl.Bcl.TimeSpan.class, bcl.Bcl.TimeSpan.Builder.class);
      }

      // Construct using bcl.Bcl.TimeSpan.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        scale_ = bcl.Bcl.TimeSpan.TimeSpanScale.DAYS;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bcl.Bcl.internal_static_bcl_TimeSpan_descriptor;
      }

      public bcl.Bcl.TimeSpan getDefaultInstanceForType() {
        return bcl.Bcl.TimeSpan.getDefaultInstance();
      }

      public bcl.Bcl.TimeSpan build() {
        bcl.Bcl.TimeSpan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public bcl.Bcl.TimeSpan buildPartial() {
        bcl.Bcl.TimeSpan result = new bcl.Bcl.TimeSpan(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.scale_ = scale_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bcl.Bcl.TimeSpan) {
          return mergeFrom((bcl.Bcl.TimeSpan)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(bcl.Bcl.TimeSpan other) {
        if (other == bcl.Bcl.TimeSpan.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasScale()) {
          setScale(other.getScale());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        bcl.Bcl.TimeSpan parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (bcl.Bcl.TimeSpan) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional sint64 value = 1;
      private long value_ ;
      /**
       * <code>optional sint64 value = 1;</code>
       *
       * <pre>
       * the size of the timespan (in units of the selected scale)
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint64 value = 1;</code>
       *
       * <pre>
       * the size of the timespan (in units of the selected scale)
       * </pre>
       */
      public long getValue() {
        return value_;
      }
      /**
       * <code>optional sint64 value = 1;</code>
       *
       * <pre>
       * the size of the timespan (in units of the selected scale)
       * </pre>
       */
      public Builder setValue(long value) {
        bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 value = 1;</code>
       *
       * <pre>
       * the size of the timespan (in units of the selected scale)
       * </pre>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0L;
        onChanged();
        return this;
      }

      // optional .bcl.TimeSpan.TimeSpanScale scale = 2 [default = DAYS];
      private bcl.Bcl.TimeSpan.TimeSpanScale scale_ = bcl.Bcl.TimeSpan.TimeSpanScale.DAYS;
      /**
       * <code>optional .bcl.TimeSpan.TimeSpanScale scale = 2 [default = DAYS];</code>
       *
       * <pre>
       * the scale of the timespan
       * </pre>
       */
      public boolean hasScale() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .bcl.TimeSpan.TimeSpanScale scale = 2 [default = DAYS];</code>
       *
       * <pre>
       * the scale of the timespan
       * </pre>
       */
      public bcl.Bcl.TimeSpan.TimeSpanScale getScale() {
        return scale_;
      }
      /**
       * <code>optional .bcl.TimeSpan.TimeSpanScale scale = 2 [default = DAYS];</code>
       *
       * <pre>
       * the scale of the timespan
       * </pre>
       */
      public Builder setScale(bcl.Bcl.TimeSpan.TimeSpanScale value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        scale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .bcl.TimeSpan.TimeSpanScale scale = 2 [default = DAYS];</code>
       *
       * <pre>
       * the scale of the timespan
       * </pre>
       */
      public Builder clearScale() {
        bitField0_ = (bitField0_ & ~0x00000002);
        scale_ = bcl.Bcl.TimeSpan.TimeSpanScale.DAYS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:bcl.TimeSpan)
    }

    static {
      defaultInstance = new TimeSpan(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:bcl.TimeSpan)
  }

  public interface DateTimeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional sint64 value = 1;
    /**
     * <code>optional sint64 value = 1;</code>
     *
     * <pre>
     * the offset (in units of the selected scale) from 1970/01/01
     * </pre>
     */
    boolean hasValue();
    /**
     * <code>optional sint64 value = 1;</code>
     *
     * <pre>
     * the offset (in units of the selected scale) from 1970/01/01
     * </pre>
     */
    long getValue();

    // optional .bcl.DateTime.TimeSpanScale scale = 2 [default = DAYS];
    /**
     * <code>optional .bcl.DateTime.TimeSpanScale scale = 2 [default = DAYS];</code>
     *
     * <pre>
     * the scale of the timespan
     * </pre>
     */
    boolean hasScale();
    /**
     * <code>optional .bcl.DateTime.TimeSpanScale scale = 2 [default = DAYS];</code>
     *
     * <pre>
     * the scale of the timespan
     * </pre>
     */
    bcl.Bcl.DateTime.TimeSpanScale getScale();
  }
  /**
   * Protobuf type {@code bcl.DateTime}
   */
  public static final class DateTime extends
      com.google.protobuf.GeneratedMessage
      implements DateTimeOrBuilder {
    // Use DateTime.newBuilder() to construct.
    private DateTime(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DateTime(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DateTime defaultInstance;
    public static DateTime getDefaultInstance() {
      return defaultInstance;
    }

    public DateTime getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DateTime(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              value_ = input.readSInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              bcl.Bcl.DateTime.TimeSpanScale value = bcl.Bcl.DateTime.TimeSpanScale.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                scale_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bcl.Bcl.internal_static_bcl_DateTime_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bcl.Bcl.internal_static_bcl_DateTime_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bcl.Bcl.DateTime.class, bcl.Bcl.DateTime.Builder.class);
    }

    public static com.google.protobuf.Parser<DateTime> PARSER =
        new com.google.protobuf.AbstractParser<DateTime>() {
      public DateTime parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DateTime(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DateTime> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code bcl.DateTime.TimeSpanScale}
     */
    public enum TimeSpanScale
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>DAYS = 0;</code>
       */
      DAYS(0, 0),
      /**
       * <code>HOURS = 1;</code>
       */
      HOURS(1, 1),
      /**
       * <code>MINUTES = 2;</code>
       */
      MINUTES(2, 2),
      /**
       * <code>SECONDS = 3;</code>
       */
      SECONDS(3, 3),
      /**
       * <code>MILLISECONDS = 4;</code>
       */
      MILLISECONDS(4, 4),
      /**
       * <code>MINMAX = 15;</code>
       *
       * <pre>
       * dubious
       * </pre>
       */
      MINMAX(5, 15),
      ;

      /**
       * <code>DAYS = 0;</code>
       */
      public static final int DAYS_VALUE = 0;
      /**
       * <code>HOURS = 1;</code>
       */
      public static final int HOURS_VALUE = 1;
      /**
       * <code>MINUTES = 2;</code>
       */
      public static final int MINUTES_VALUE = 2;
      /**
       * <code>SECONDS = 3;</code>
       */
      public static final int SECONDS_VALUE = 3;
      /**
       * <code>MILLISECONDS = 4;</code>
       */
      public static final int MILLISECONDS_VALUE = 4;
      /**
       * <code>MINMAX = 15;</code>
       *
       * <pre>
       * dubious
       * </pre>
       */
      public static final int MINMAX_VALUE = 15;


      public final int getNumber() { return value; }

      public static TimeSpanScale valueOf(int value) {
        switch (value) {
          case 0: return DAYS;
          case 1: return HOURS;
          case 2: return MINUTES;
          case 3: return SECONDS;
          case 4: return MILLISECONDS;
          case 15: return MINMAX;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TimeSpanScale>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<TimeSpanScale>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TimeSpanScale>() {
              public TimeSpanScale findValueByNumber(int number) {
                return TimeSpanScale.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return bcl.Bcl.DateTime.getDescriptor().getEnumTypes().get(0);
      }

      private static final TimeSpanScale[] VALUES = values();

      public static TimeSpanScale valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private TimeSpanScale(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:bcl.DateTime.TimeSpanScale)
    }

    private int bitField0_;
    // optional sint64 value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private long value_;
    /**
     * <code>optional sint64 value = 1;</code>
     *
     * <pre>
     * the offset (in units of the selected scale) from 1970/01/01
     * </pre>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint64 value = 1;</code>
     *
     * <pre>
     * the offset (in units of the selected scale) from 1970/01/01
     * </pre>
     */
    public long getValue() {
      return value_;
    }

    // optional .bcl.DateTime.TimeSpanScale scale = 2 [default = DAYS];
    public static final int SCALE_FIELD_NUMBER = 2;
    private bcl.Bcl.DateTime.TimeSpanScale scale_;
    /**
     * <code>optional .bcl.DateTime.TimeSpanScale scale = 2 [default = DAYS];</code>
     *
     * <pre>
     * the scale of the timespan
     * </pre>
     */
    public boolean hasScale() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .bcl.DateTime.TimeSpanScale scale = 2 [default = DAYS];</code>
     *
     * <pre>
     * the scale of the timespan
     * </pre>
     */
    public bcl.Bcl.DateTime.TimeSpanScale getScale() {
      return scale_;
    }

    private void initFields() {
      value_ = 0L;
      scale_ = bcl.Bcl.DateTime.TimeSpanScale.DAYS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt64(1, value_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, scale_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(1, value_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, scale_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static bcl.Bcl.DateTime parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bcl.Bcl.DateTime parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bcl.Bcl.DateTime parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bcl.Bcl.DateTime parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bcl.Bcl.DateTime parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bcl.Bcl.DateTime parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static bcl.Bcl.DateTime parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static bcl.Bcl.DateTime parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static bcl.Bcl.DateTime parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bcl.Bcl.DateTime parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bcl.Bcl.DateTime prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code bcl.DateTime}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements bcl.Bcl.DateTimeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bcl.Bcl.internal_static_bcl_DateTime_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bcl.Bcl.internal_static_bcl_DateTime_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                bcl.Bcl.DateTime.class, bcl.Bcl.DateTime.Builder.class);
      }

      // Construct using bcl.Bcl.DateTime.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        scale_ = bcl.Bcl.DateTime.TimeSpanScale.DAYS;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bcl.Bcl.internal_static_bcl_DateTime_descriptor;
      }

      public bcl.Bcl.DateTime getDefaultInstanceForType() {
        return bcl.Bcl.DateTime.getDefaultInstance();
      }

      public bcl.Bcl.DateTime build() {
        bcl.Bcl.DateTime result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public bcl.Bcl.DateTime buildPartial() {
        bcl.Bcl.DateTime result = new bcl.Bcl.DateTime(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.scale_ = scale_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bcl.Bcl.DateTime) {
          return mergeFrom((bcl.Bcl.DateTime)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(bcl.Bcl.DateTime other) {
        if (other == bcl.Bcl.DateTime.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasScale()) {
          setScale(other.getScale());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        bcl.Bcl.DateTime parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (bcl.Bcl.DateTime) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional sint64 value = 1;
      private long value_ ;
      /**
       * <code>optional sint64 value = 1;</code>
       *
       * <pre>
       * the offset (in units of the selected scale) from 1970/01/01
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint64 value = 1;</code>
       *
       * <pre>
       * the offset (in units of the selected scale) from 1970/01/01
       * </pre>
       */
      public long getValue() {
        return value_;
      }
      /**
       * <code>optional sint64 value = 1;</code>
       *
       * <pre>
       * the offset (in units of the selected scale) from 1970/01/01
       * </pre>
       */
      public Builder setValue(long value) {
        bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 value = 1;</code>
       *
       * <pre>
       * the offset (in units of the selected scale) from 1970/01/01
       * </pre>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0L;
        onChanged();
        return this;
      }

      // optional .bcl.DateTime.TimeSpanScale scale = 2 [default = DAYS];
      private bcl.Bcl.DateTime.TimeSpanScale scale_ = bcl.Bcl.DateTime.TimeSpanScale.DAYS;
      /**
       * <code>optional .bcl.DateTime.TimeSpanScale scale = 2 [default = DAYS];</code>
       *
       * <pre>
       * the scale of the timespan
       * </pre>
       */
      public boolean hasScale() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .bcl.DateTime.TimeSpanScale scale = 2 [default = DAYS];</code>
       *
       * <pre>
       * the scale of the timespan
       * </pre>
       */
      public bcl.Bcl.DateTime.TimeSpanScale getScale() {
        return scale_;
      }
      /**
       * <code>optional .bcl.DateTime.TimeSpanScale scale = 2 [default = DAYS];</code>
       *
       * <pre>
       * the scale of the timespan
       * </pre>
       */
      public Builder setScale(bcl.Bcl.DateTime.TimeSpanScale value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        scale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .bcl.DateTime.TimeSpanScale scale = 2 [default = DAYS];</code>
       *
       * <pre>
       * the scale of the timespan
       * </pre>
       */
      public Builder clearScale() {
        bitField0_ = (bitField0_ & ~0x00000002);
        scale_ = bcl.Bcl.DateTime.TimeSpanScale.DAYS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:bcl.DateTime)
    }

    static {
      defaultInstance = new DateTime(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:bcl.DateTime)
  }

  public interface GuidOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional fixed64 lo = 1;
    /**
     * <code>optional fixed64 lo = 1;</code>
     *
     * <pre>
     * the first 8 bytes of the guid
     * </pre>
     */
    boolean hasLo();
    /**
     * <code>optional fixed64 lo = 1;</code>
     *
     * <pre>
     * the first 8 bytes of the guid
     * </pre>
     */
    long getLo();

    // optional fixed64 hi = 2;
    /**
     * <code>optional fixed64 hi = 2;</code>
     *
     * <pre>
     * the second 8 bytes of the guid
     * </pre>
     */
    boolean hasHi();
    /**
     * <code>optional fixed64 hi = 2;</code>
     *
     * <pre>
     * the second 8 bytes of the guid
     * </pre>
     */
    long getHi();
  }
  /**
   * Protobuf type {@code bcl.Guid}
   */
  public static final class Guid extends
      com.google.protobuf.GeneratedMessage
      implements GuidOrBuilder {
    // Use Guid.newBuilder() to construct.
    private Guid(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Guid(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Guid defaultInstance;
    public static Guid getDefaultInstance() {
      return defaultInstance;
    }

    public Guid getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Guid(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              lo_ = input.readFixed64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              hi_ = input.readFixed64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bcl.Bcl.internal_static_bcl_Guid_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bcl.Bcl.internal_static_bcl_Guid_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bcl.Bcl.Guid.class, bcl.Bcl.Guid.Builder.class);
    }

    public static com.google.protobuf.Parser<Guid> PARSER =
        new com.google.protobuf.AbstractParser<Guid>() {
      public Guid parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Guid(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Guid> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional fixed64 lo = 1;
    public static final int LO_FIELD_NUMBER = 1;
    private long lo_;
    /**
     * <code>optional fixed64 lo = 1;</code>
     *
     * <pre>
     * the first 8 bytes of the guid
     * </pre>
     */
    public boolean hasLo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 lo = 1;</code>
     *
     * <pre>
     * the first 8 bytes of the guid
     * </pre>
     */
    public long getLo() {
      return lo_;
    }

    // optional fixed64 hi = 2;
    public static final int HI_FIELD_NUMBER = 2;
    private long hi_;
    /**
     * <code>optional fixed64 hi = 2;</code>
     *
     * <pre>
     * the second 8 bytes of the guid
     * </pre>
     */
    public boolean hasHi() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 hi = 2;</code>
     *
     * <pre>
     * the second 8 bytes of the guid
     * </pre>
     */
    public long getHi() {
      return hi_;
    }

    private void initFields() {
      lo_ = 0L;
      hi_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, lo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(2, hi_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, lo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, hi_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static bcl.Bcl.Guid parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bcl.Bcl.Guid parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bcl.Bcl.Guid parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bcl.Bcl.Guid parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bcl.Bcl.Guid parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bcl.Bcl.Guid parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static bcl.Bcl.Guid parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static bcl.Bcl.Guid parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static bcl.Bcl.Guid parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bcl.Bcl.Guid parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bcl.Bcl.Guid prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code bcl.Guid}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements bcl.Bcl.GuidOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bcl.Bcl.internal_static_bcl_Guid_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bcl.Bcl.internal_static_bcl_Guid_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                bcl.Bcl.Guid.class, bcl.Bcl.Guid.Builder.class);
      }

      // Construct using bcl.Bcl.Guid.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        lo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        hi_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bcl.Bcl.internal_static_bcl_Guid_descriptor;
      }

      public bcl.Bcl.Guid getDefaultInstanceForType() {
        return bcl.Bcl.Guid.getDefaultInstance();
      }

      public bcl.Bcl.Guid build() {
        bcl.Bcl.Guid result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public bcl.Bcl.Guid buildPartial() {
        bcl.Bcl.Guid result = new bcl.Bcl.Guid(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lo_ = lo_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hi_ = hi_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bcl.Bcl.Guid) {
          return mergeFrom((bcl.Bcl.Guid)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(bcl.Bcl.Guid other) {
        if (other == bcl.Bcl.Guid.getDefaultInstance()) return this;
        if (other.hasLo()) {
          setLo(other.getLo());
        }
        if (other.hasHi()) {
          setHi(other.getHi());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        bcl.Bcl.Guid parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (bcl.Bcl.Guid) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional fixed64 lo = 1;
      private long lo_ ;
      /**
       * <code>optional fixed64 lo = 1;</code>
       *
       * <pre>
       * the first 8 bytes of the guid
       * </pre>
       */
      public boolean hasLo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 lo = 1;</code>
       *
       * <pre>
       * the first 8 bytes of the guid
       * </pre>
       */
      public long getLo() {
        return lo_;
      }
      /**
       * <code>optional fixed64 lo = 1;</code>
       *
       * <pre>
       * the first 8 bytes of the guid
       * </pre>
       */
      public Builder setLo(long value) {
        bitField0_ |= 0x00000001;
        lo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 lo = 1;</code>
       *
       * <pre>
       * the first 8 bytes of the guid
       * </pre>
       */
      public Builder clearLo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lo_ = 0L;
        onChanged();
        return this;
      }

      // optional fixed64 hi = 2;
      private long hi_ ;
      /**
       * <code>optional fixed64 hi = 2;</code>
       *
       * <pre>
       * the second 8 bytes of the guid
       * </pre>
       */
      public boolean hasHi() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 hi = 2;</code>
       *
       * <pre>
       * the second 8 bytes of the guid
       * </pre>
       */
      public long getHi() {
        return hi_;
      }
      /**
       * <code>optional fixed64 hi = 2;</code>
       *
       * <pre>
       * the second 8 bytes of the guid
       * </pre>
       */
      public Builder setHi(long value) {
        bitField0_ |= 0x00000002;
        hi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 hi = 2;</code>
       *
       * <pre>
       * the second 8 bytes of the guid
       * </pre>
       */
      public Builder clearHi() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hi_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:bcl.Guid)
    }

    static {
      defaultInstance = new Guid(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:bcl.Guid)
  }

  public interface DecimalOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 lo = 1;
    /**
     * <code>optional uint64 lo = 1;</code>
     *
     * <pre>
     * the first 64 bits of the underlying value
     * </pre>
     */
    boolean hasLo();
    /**
     * <code>optional uint64 lo = 1;</code>
     *
     * <pre>
     * the first 64 bits of the underlying value
     * </pre>
     */
    long getLo();

    // optional uint32 hi = 2;
    /**
     * <code>optional uint32 hi = 2;</code>
     *
     * <pre>
     * the last 32 bis of the underlying value
     * </pre>
     */
    boolean hasHi();
    /**
     * <code>optional uint32 hi = 2;</code>
     *
     * <pre>
     * the last 32 bis of the underlying value
     * </pre>
     */
    int getHi();

    // optional sint32 signScale = 3;
    /**
     * <code>optional sint32 signScale = 3;</code>
     *
     * <pre>
     * the number of decimal digits, and the sign
     * </pre>
     */
    boolean hasSignScale();
    /**
     * <code>optional sint32 signScale = 3;</code>
     *
     * <pre>
     * the number of decimal digits, and the sign
     * </pre>
     */
    int getSignScale();
  }
  /**
   * Protobuf type {@code bcl.Decimal}
   */
  public static final class Decimal extends
      com.google.protobuf.GeneratedMessage
      implements DecimalOrBuilder {
    // Use Decimal.newBuilder() to construct.
    private Decimal(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Decimal(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Decimal defaultInstance;
    public static Decimal getDefaultInstance() {
      return defaultInstance;
    }

    public Decimal getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Decimal(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              lo_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              hi_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              signScale_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bcl.Bcl.internal_static_bcl_Decimal_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bcl.Bcl.internal_static_bcl_Decimal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bcl.Bcl.Decimal.class, bcl.Bcl.Decimal.Builder.class);
    }

    public static com.google.protobuf.Parser<Decimal> PARSER =
        new com.google.protobuf.AbstractParser<Decimal>() {
      public Decimal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Decimal(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Decimal> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 lo = 1;
    public static final int LO_FIELD_NUMBER = 1;
    private long lo_;
    /**
     * <code>optional uint64 lo = 1;</code>
     *
     * <pre>
     * the first 64 bits of the underlying value
     * </pre>
     */
    public boolean hasLo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 lo = 1;</code>
     *
     * <pre>
     * the first 64 bits of the underlying value
     * </pre>
     */
    public long getLo() {
      return lo_;
    }

    // optional uint32 hi = 2;
    public static final int HI_FIELD_NUMBER = 2;
    private int hi_;
    /**
     * <code>optional uint32 hi = 2;</code>
     *
     * <pre>
     * the last 32 bis of the underlying value
     * </pre>
     */
    public boolean hasHi() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 hi = 2;</code>
     *
     * <pre>
     * the last 32 bis of the underlying value
     * </pre>
     */
    public int getHi() {
      return hi_;
    }

    // optional sint32 signScale = 3;
    public static final int SIGNSCALE_FIELD_NUMBER = 3;
    private int signScale_;
    /**
     * <code>optional sint32 signScale = 3;</code>
     *
     * <pre>
     * the number of decimal digits, and the sign
     * </pre>
     */
    public boolean hasSignScale() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint32 signScale = 3;</code>
     *
     * <pre>
     * the number of decimal digits, and the sign
     * </pre>
     */
    public int getSignScale() {
      return signScale_;
    }

    private void initFields() {
      lo_ = 0L;
      hi_ = 0;
      signScale_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, lo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, hi_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, signScale_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, lo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, hi_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, signScale_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static bcl.Bcl.Decimal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bcl.Bcl.Decimal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bcl.Bcl.Decimal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bcl.Bcl.Decimal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bcl.Bcl.Decimal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bcl.Bcl.Decimal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static bcl.Bcl.Decimal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static bcl.Bcl.Decimal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static bcl.Bcl.Decimal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bcl.Bcl.Decimal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(bcl.Bcl.Decimal prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code bcl.Decimal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements bcl.Bcl.DecimalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bcl.Bcl.internal_static_bcl_Decimal_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bcl.Bcl.internal_static_bcl_Decimal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                bcl.Bcl.Decimal.class, bcl.Bcl.Decimal.Builder.class);
      }

      // Construct using bcl.Bcl.Decimal.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        lo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        hi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        signScale_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bcl.Bcl.internal_static_bcl_Decimal_descriptor;
      }

      public bcl.Bcl.Decimal getDefaultInstanceForType() {
        return bcl.Bcl.Decimal.getDefaultInstance();
      }

      public bcl.Bcl.Decimal build() {
        bcl.Bcl.Decimal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public bcl.Bcl.Decimal buildPartial() {
        bcl.Bcl.Decimal result = new bcl.Bcl.Decimal(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lo_ = lo_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hi_ = hi_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.signScale_ = signScale_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bcl.Bcl.Decimal) {
          return mergeFrom((bcl.Bcl.Decimal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(bcl.Bcl.Decimal other) {
        if (other == bcl.Bcl.Decimal.getDefaultInstance()) return this;
        if (other.hasLo()) {
          setLo(other.getLo());
        }
        if (other.hasHi()) {
          setHi(other.getHi());
        }
        if (other.hasSignScale()) {
          setSignScale(other.getSignScale());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        bcl.Bcl.Decimal parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (bcl.Bcl.Decimal) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 lo = 1;
      private long lo_ ;
      /**
       * <code>optional uint64 lo = 1;</code>
       *
       * <pre>
       * the first 64 bits of the underlying value
       * </pre>
       */
      public boolean hasLo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 lo = 1;</code>
       *
       * <pre>
       * the first 64 bits of the underlying value
       * </pre>
       */
      public long getLo() {
        return lo_;
      }
      /**
       * <code>optional uint64 lo = 1;</code>
       *
       * <pre>
       * the first 64 bits of the underlying value
       * </pre>
       */
      public Builder setLo(long value) {
        bitField0_ |= 0x00000001;
        lo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 lo = 1;</code>
       *
       * <pre>
       * the first 64 bits of the underlying value
       * </pre>
       */
      public Builder clearLo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lo_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 hi = 2;
      private int hi_ ;
      /**
       * <code>optional uint32 hi = 2;</code>
       *
       * <pre>
       * the last 32 bis of the underlying value
       * </pre>
       */
      public boolean hasHi() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 hi = 2;</code>
       *
       * <pre>
       * the last 32 bis of the underlying value
       * </pre>
       */
      public int getHi() {
        return hi_;
      }
      /**
       * <code>optional uint32 hi = 2;</code>
       *
       * <pre>
       * the last 32 bis of the underlying value
       * </pre>
       */
      public Builder setHi(int value) {
        bitField0_ |= 0x00000002;
        hi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 hi = 2;</code>
       *
       * <pre>
       * the last 32 bis of the underlying value
       * </pre>
       */
      public Builder clearHi() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hi_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 signScale = 3;
      private int signScale_ ;
      /**
       * <code>optional sint32 signScale = 3;</code>
       *
       * <pre>
       * the number of decimal digits, and the sign
       * </pre>
       */
      public boolean hasSignScale() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint32 signScale = 3;</code>
       *
       * <pre>
       * the number of decimal digits, and the sign
       * </pre>
       */
      public int getSignScale() {
        return signScale_;
      }
      /**
       * <code>optional sint32 signScale = 3;</code>
       *
       * <pre>
       * the number of decimal digits, and the sign
       * </pre>
       */
      public Builder setSignScale(int value) {
        bitField0_ |= 0x00000004;
        signScale_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 signScale = 3;</code>
       *
       * <pre>
       * the number of decimal digits, and the sign
       * </pre>
       */
      public Builder clearSignScale() {
        bitField0_ = (bitField0_ & ~0x00000004);
        signScale_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:bcl.Decimal)
    }

    static {
      defaultInstance = new Decimal(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:bcl.Decimal)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bcl_TimeSpan_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bcl_TimeSpan_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bcl_DateTime_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bcl_DateTime_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bcl_Guid_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bcl_Guid_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bcl_Decimal_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bcl_Decimal_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tbcl.proto\022\003bcl\"\251\001\n\010TimeSpan\022\r\n\005value\030\001" +
      " \001(\022\0220\n\005scale\030\002 \001(\0162\033.bcl.TimeSpan.TimeS" +
      "panScale:\004DAYS\"\\\n\rTimeSpanScale\022\010\n\004DAYS\020" +
      "\000\022\t\n\005HOURS\020\001\022\013\n\007MINUTES\020\002\022\013\n\007SECONDS\020\003\022\020" +
      "\n\014MILLISECONDS\020\004\022\n\n\006MINMAX\020\017\"\251\001\n\010DateTim" +
      "e\022\r\n\005value\030\001 \001(\022\0220\n\005scale\030\002 \001(\0162\033.bcl.Da" +
      "teTime.TimeSpanScale:\004DAYS\"\\\n\rTimeSpanSc" +
      "ale\022\010\n\004DAYS\020\000\022\t\n\005HOURS\020\001\022\013\n\007MINUTES\020\002\022\013\n" +
      "\007SECONDS\020\003\022\020\n\014MILLISECONDS\020\004\022\n\n\006MINMAX\020\017" +
      "\"\036\n\004Guid\022\n\n\002lo\030\001 \001(\006\022\n\n\002hi\030\002 \001(\006\"4\n\007Deci",
      "mal\022\n\n\002lo\030\001 \001(\004\022\n\n\002hi\030\002 \001(\r\022\021\n\tsignScale" +
      "\030\003 \001(\021"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_bcl_TimeSpan_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_bcl_TimeSpan_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bcl_TimeSpan_descriptor,
              new java.lang.String[] { "Value", "Scale", });
          internal_static_bcl_DateTime_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_bcl_DateTime_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bcl_DateTime_descriptor,
              new java.lang.String[] { "Value", "Scale", });
          internal_static_bcl_Guid_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_bcl_Guid_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bcl_Guid_descriptor,
              new java.lang.String[] { "Lo", "Hi", });
          internal_static_bcl_Decimal_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_bcl_Decimal_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_bcl_Decimal_descriptor,
              new java.lang.String[] { "Lo", "Hi", "SignScale", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
